<?php

/**
 * @file
 * This file will alter the view.
 */

use Drupal\Core\Cache\CacheBackendInterface;
use Drupal\Core\Datetime\DrupalDateTime;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function practice_test_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $options = &drupal_static(__FUNCTION__);
  if (is_null($options)) {
    $cid = 'node:news:year';
    $data = \Drupal::cache()->get($cid);
    if (!$data) {
      $options = [];
      $options[''] = t('- All -');
      $query = \Drupal::entityQuery('node');
      $query->condition('type', 'news')
        ->condition('status', 1)
        ->accessCheck(FALSE)
        ->sort('created', 'ASC');
      $result = $query->execute();
      if ($result) {
        $nodes = Node::loadMultiple($result);
        foreach ($nodes as $node) {
          $date = $node->created->value;
          $date = date('Y-m-d H:i:s', $date);
          if ($date) {
            $date = new DrupalDateTime($date, new DateTimeZone('UTC'));
            $year = $date->format('Y');
            if (!isset($options[$year])) {
              $options[$year] = $year;
            }
          }
        }
      }

      $cache_tags = ['node:news:year'];
      \Drupal::cache()->set($cid, $options, CacheBackendInterface::CACHE_PERMANENT, $cache_tags);
    }
    else {
      $options = $data->data;
    }

  }
  // Change your field type and options here.
  $form['field_news_date_value'] = [
    '#type' => 'select',
    '#options' => $options,
  ];
}

/**
 * Implements hook_views_query_alter().
 */
function practice_test_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() == 'latest_news_block') {

    $expression = "YEAR(FROM_UNIXTIME(node_field_data.created)) = :year";

    $input_year = $view->exposed_data['field_news_date_value'];
    if ($input_year != "") {
      unset($query->where[1]['conditions'][2]);
      $query->addWhereExpression(1, $expression, [':year' => $input_year]);
    }
  }
}
